{
  
    
        "post0": {
            "title": "3장 시계열 데이터를 위한 탐색적 데이터 분석",
            "content": "head(EuStockMarkets) . A matrix: 6 × 4 of type dbl DAXSMICACFTSE . 1628.75 | 1678.1 | 1772.8 | 2443.6 | . 1613.63 | 1688.5 | 1750.5 | 2460.2 | . 1606.51 | 1678.6 | 1718.0 | 2448.2 | . 1621.04 | 1684.1 | 1708.1 | 2470.4 | . 1618.16 | 1686.6 | 1723.1 | 2484.7 | . 1610.61 | 1671.6 | 1714.3 | 2466.8 | . plot(EuStockMarkets) . class(EuStockMarkets) . &lt;ol class=list-inline&gt;&#39;mts&#39; | &#39;ts&#39; | &#39;matrix&#39; | &lt;/ol&gt; frequency(EuStockMarkets) . 260 start(EuStockMarkets) end(EuStockMarkets) . &lt;ol class=list-inline&gt;1991 | 130 | &lt;/ol&gt; &lt;ol class=list-inline&gt;1998 | 169 | &lt;/ol&gt; window(EuStockMarkets, start = 1997, end = 1998) . A Time Series: 261 × 4 DAXSMICACFTSE . 1997.0002844.09 | 3869.8 | 2289.6 | 4092.5 | . 1997.0042844.09 | 3869.8 | 2289.6 | 4092.5 | . 1997.0082844.09 | 3869.8 | 2303.8 | 4092.5 | . 1997.0122859.22 | 3922.2 | 2307.0 | 4091.0 | . 1997.0152880.07 | 3948.3 | 2318.6 | 4115.7 | . 1997.0192880.07 | 3942.2 | 2315.7 | 4118.5 | . 1997.0232880.07 | 3942.2 | 2315.7 | 4118.5 | . 1997.0272820.81 | 3942.2 | 2257.0 | 4057.4 | . 1997.0312863.26 | 3940.1 | 2282.8 | 4089.5 | . 1997.0352890.20 | 3923.8 | 2306.7 | 4106.5 | . 1997.0382876.34 | 3922.9 | 2301.7 | 4078.8 | . 1997.0422904.08 | 3944.9 | 2331.6 | 4087.5 | . 1997.0462936.69 | 3966.2 | 2349.1 | 4087.0 | . 1997.0502915.81 | 3947.4 | 2327.5 | 4056.6 | . 1997.0542956.78 | 3975.5 | 2361.3 | 4107.3 | . 1997.0582978.84 | 3983.6 | 2402.1 | 4168.2 | . 1997.0622976.56 | 3979.6 | 2388.0 | 4158.9 | . 1997.0652996.12 | 4007.1 | 2407.8 | 4197.5 | . 1997.0693006.87 | 4019.9 | 2425.1 | 4207.7 | . 1997.0732999.19 | 4009.5 | 2406.1 | 4194.0 | . 1997.0773000.66 | 4023.1 | 2409.9 | 4195.5 | . 1997.0813026.63 | 4115.4 | 2442.5 | 4219.1 | . 1997.0853037.28 | 4161.0 | 2461.3 | 4219.1 | . 1997.0882982.63 | 4125.5 | 2430.3 | 4218.8 | . 1997.0922992.55 | 4127.3 | 2435.2 | 4212.0 | . 1997.0963028.27 | 4182.3 | 2482.8 | 4237.4 | . 1997.1002997.95 | 4169.7 | 2465.0 | 4207.5 | . 1997.1043018.58 | 4209.1 | 2503.1 | 4228.4 | . 1997.1083037.70 | 4272.2 | 2516.6 | 4275.8 | . 1997.1123064.70 | 4282.8 | 2508.6 | 4257.8 | . 1997.1153067.48 | 4296.5 | 2503.1 | 4260.9 | . 1997.1193114.73 | 4305.5 | 2541.3 | 4281.5 | . 1997.1233124.78 | 4309.8 | 2558.4 | 4265.9 | . 1997.1273161.36 | 4357.9 | 2597.5 | 4307.8 | . 1997.1313185.72 | 4384.3 | 2595.4 | 4307.7 | . 1997.1353191.45 | 4408.4 | 2582.1 | 4304.3 | . 1997.1383211.01 | 4444.1 | 2599.3 | 4304.3 | . 1997.1423256.86 | 4436.3 | 2628.4 | 4327.1 | . 1997.1463249.17 | 4464.2 | 2627.4 | 4341.0 | . 1997.1503260.30 | 4514.6 | 2634.5 | 4337.8 | . 1997.1543230.83 | 4490.7 | 2617.5 | 4332.3 | . 1997.1583209.04 | 4525.5 | 2594.8 | 4357.4 | . 1997.1623197.09 | 4530.8 | 2575.2 | 4356.1 | . 1997.1653203.79 | 4522.5 | 2562.8 | 4336.8 | . 1997.1693180.63 | 4463.2 | 2567.9 | 4331.1 | . 1997.1733233.34 | 4503.9 | 2607.7 | 4344.7 | . 1997.1773245.02 | 4539.0 | 2602.2 | 4329.3 | . 1997.1813272.58 | 4519.7 | 2629.4 | 4339.2 | . 1997.1853261.04 | 4487.6 | 2607.8 | 4308.3 | . 1997.1883258.74 | 4460.1 | 2600.3 | 4307.1 | . 1997.1923345.09 | 4513.7 | 2651.7 | 4357.7 | . 1997.1963375.45 | 4547.1 | 2666.2 | 4360.1 | . 1997.2003396.55 | 4605.2 | 2698.9 | 4399.3 | . 1997.2043419.51 | 4638.9 | 2708.3 | 4420.3 | . 1997.2083426.77 | 4684.4 | 2709.2 | 4437.4 | . 1997.2123430.95 | 4677.1 | 2686.2 | 4444.3 | . 1997.2153382.40 | 4676.2 | 2641.7 | 4422.5 | . 1997.2193367.82 | 4609.9 | 2632.1 | 4397.7 | . 1997.2233404.29 | 4636.2 | 2645.6 | 4424.3 | . 1997.2273337.11 | 4556.5 | 2588.4 | 4373.3 | . 1997.2313289.59 | 4519.9 | 2574.0 | 4356.8 | . 1997.2353305.72 | 4535.1 | 2596.8 | 4332.2 | . 1997.2383247.03 | 4442.9 | 2553.7 | 4258.1 | . 1997.2423288.52 | 4491.3 | 2587.1 | 4254.8 | . 1997.2463302.57 | 4497.3 | 2579.3 | 4214.8 | . 1997.2503374.93 | 4558.6 | 2624.3 | 4270.7 | . 1997.2543439.22 | 4620.5 | 2648.7 | 4301.5 | . 1997.2583407.83 | 4659.2 | 2656.7 | 4312.9 | . 1997.2623407.83 | 4659.2 | 2656.7 | 4312.9 | . 1997.2653407.83 | 4659.2 | 2656.7 | 4312.9 | . 1997.2693281.46 | 4501.7 | 2581.8 | 4248.1 | . 1997.2733210.94 | 4488.7 | 2530.3 | 4236.6 | . 1997.2773212.82 | 4463.9 | 2514.5 | 4214.6 | . 1997.2813235.35 | 4471.5 | 2518.0 | 4236.6 | . 1997.2853342.77 | 4588.0 | 2572.3 | 4271.7 | . 1997.2883328.13 | 4582.6 | 2579.0 | 4269.3 | . 1997.2923364.76 | 4634.9 | 2617.6 | 4292.3 | . 1997.2963352.58 | 4626.6 | 2608.0 | 4313.2 | . 1997.3003319.24 | 4604.2 | 2574.6 | 4270.7 | . 1997.3043297.52 | 4586.3 | 2566.1 | 4251.7 | . 1997.3083369.26 | 4643.4 | 2620.6 | 4286.8 | . 1997.3123347.54 | 4625.6 | 2621.0 | 4294.6 | . 1997.3153361.80 | 4665.7 | 2615.2 | 4298.9 | . 1997.3193361.20 | 4699.1 | 2547.6 | 4310.5 | . 1997.3233328.41 | 4740.1 | 2522.7 | 4328.7 | . 1997.3273348.90 | 4752.3 | 2514.7 | 4346.1 | . 1997.3313366.87 | 4781.1 | 2533.6 | 4387.7 | . 1997.3353396.49 | 4836.1 | 2539.8 | 4388.5 | . 1997.3383357.57 | 4772.3 | 2536.3 | 4369.7 | . 1997.3423372.96 | 4793.3 | 2550.3 | 4389.7 | . 1997.3463425.86 | 4855.1 | 2602.9 | 4433.2 | . 1997.3503438.09 | 4897.6 | 2639.5 | 4436.0 | . 1997.3543438.09 | 4897.6 | 2639.5 | 4445.0 | . 1997.3583491.08 | 4953.5 | 2655.3 | 4455.6 | . 1997.3623565.69 | 5029.6 | 2672.8 | 4455.6 | . 1997.3653548.52 | 4988.4 | 2651.9 | 4519.3 | . 1997.3693537.45 | 5016.0 | 2643.3 | 4537.5 | . 1997.3733537.45 | 5016.0 | 2643.3 | 4580.4 | . 1997.3773533.21 | 5004.7 | 2633.9 | 4630.9 | . 1997.3813593.14 | 5042.5 | 2693.1 | 4669.6 | . 1997.3853559.29 | 5084.2 | 2719.6 | 4691.0 | . 1997.3883588.57 | 5134.3 | 2774.6 | 4686.9 | . 1997.3923564.85 | 5141.7 | 2776.0 | 4681.2 | . 1997.3963569.26 | 5157.5 | 2784.3 | 4693.9 | . 1997.4003569.26 | 5157.5 | 2784.3 | 4645.2 | . 1997.4043516.20 | 5081.0 | 2751.1 | 4607.5 | . 1997.4083600.40 | 5178.6 | 2786.4 | 4642.0 | . 1997.4123575.44 | 5176.4 | 2741.7 | 4651.8 | . 1997.4153621.72 | 5181.0 | 2762.9 | 4661.8 | . 1997.4193669.31 | 5196.7 | 2654.7 | 4661.8 | . 1997.4233665.43 | 5190.0 | 2680.3 | 4681.6 | . 1997.4273626.60 | 5133.1 | 2583.2 | 4677.5 | . 1997.4313635.38 | 5132.1 | 2579.2 | 4672.3 | . 1997.4353562.73 | 5041.6 | 2583.9 | 4621.3 | . 1997.4383596.40 | 5150.0 | 2601.5 | 4562.8 | . 1997.4423655.59 | 5207.2 | 2624.5 | 4557.8 | . 1997.4463651.59 | 5238.5 | 2635.4 | 4557.1 | . 1997.4503684.60 | 5251.2 | 2690.9 | 4576.2 | . 1997.4543700.53 | 5320.0 | 2719.3 | 4645.0 | . 1997.4583668.61 | 5368.8 | 2686.2 | 4686.7 | . 1997.4623671.16 | 5361.9 | 2664.2 | 4739.6 | . 1997.4653671.87 | 5308.6 | 2696.2 | 4724.8 | . 1997.4693737.16 | 5364.2 | 2760.3 | 4757.4 | . 1997.4733752.37 | 5384.6 | 2808.5 | 4783.1 | . 1997.4773750.02 | 5362.0 | 2795.9 | 4745.1 | . 1997.4813721.18 | 5345.9 | 2762.6 | 4682.2 | . 1997.4853730.56 | 5405.0 | 2751.7 | 4657.0 | . 1997.4883777.56 | 5510.3 | 2739.7 | 4653.7 | . 1997.4923788.54 | 5561.8 | 2757.1 | 4593.9 | . 1997.4963748.79 | 5587.8 | 2762.2 | 4575.8 | . 1997.5003761.07 | 5576.1 | 2784.8 | 4596.3 | . 1997.5043819.52 | 5662.4 | 2867.4 | 4640.0 | . 1997.5083820.16 | 5669.9 | 2893.6 | 4657.9 | . 1997.5123809.92 | 5700.3 | 2891.0 | 4640.3 | . 1997.5153766.89 | 5620.6 | 2858.3 | 4604.6 | . 1997.5193834.84 | 5654.8 | 2944.0 | 4728.3 | . 1997.5233867.53 | 5674.3 | 2909.5 | 4751.4 | . 1997.5273939.73 | 5804.9 | 2937.0 | 4831.7 | . 1997.5313946.73 | 5846.5 | 2934.5 | 4812.8 | . 1997.5354003.35 | 5947.0 | 2947.7 | 4810.7 | . 1997.5384030.10 | 6012.6 | 2929.8 | 4758.5 | . 1997.5424026.97 | 5977.1 | 2950.6 | 4762.4 | . 1997.5464000.65 | 5885.4 | 2929.1 | 4767.8 | . 1997.5504074.30 | 5801.5 | 2941.6 | 4799.5 | . 1997.5544142.19 | 5845.8 | 2941.6 | 4857.4 | . 1997.5584139.68 | 5844.7 | 2950.7 | 4899.3 | . 1997.5624223.69 | 5927.5 | 2988.0 | 4964.2 | . 1997.5654203.91 | 5868.3 | 2958.6 | 4949.0 | . 1997.5694131.94 | 5737.1 | 2876.7 | 4877.2 | . 1997.5734139.96 | 5620.5 | 2874.1 | 4805.7 | . 1997.5774297.64 | 5677.1 | 2921.1 | 4846.7 | . 1997.5814384.82 | 5869.9 | 3003.5 | 4874.5 | . 1997.5854320.52 | 5849.2 | 2973.5 | 4862.9 | . 1997.5884368.54 | 5847.0 | 3025.9 | 4851.5 | . 1997.5924400.30 | 5888.0 | 3022.2 | 4862.6 | . 1997.5964377.70 | 5842.1 | 3023.6 | 4876.6 | . 1997.6004458.66 | 5929.5 | 3069.3 | 4927.3 | . 1997.6044405.52 | 5898.2 | 3075.7 | 4907.5 | . 1997.6084336.98 | 5898.2 | 3049.5 | 4899.3 | . 1997.6124302.50 | 5771.0 | 2992.4 | 4895.7 | . 1997.6154325.86 | 5765.2 | 2984.1 | 4960.6 | . 1997.6194364.25 | 5812.1 | 3037.1 | 5026.2 | . 1997.6234428.08 | 5922.1 | 3056.3 | 5086.8 | . 1997.6274342.31 | 5864.8 | 2996.3 | 5031.3 | . 1997.6314333.15 | 5825.6 | 2983.4 | 5031.9 | . 1997.6354377.51 | 5808.4 | 2998.6 | 5075.8 | . 1997.6384237.06 | 5682.1 | 2924.0 | 5003.6 | . 1997.6424195.53 | 5579.5 | 2921.8 | 4991.3 | . 1997.6464077.59 | 5498.5 | 2921.8 | 4865.8 | . 1997.6504080.55 | 5405.6 | 2870.1 | 4835.0 | . 1997.6544190.45 | 5580.1 | 2936.2 | 4914.2 | . 1997.6584251.93 | 5690.1 | 2979.3 | 4958.4 | . 1997.6624204.81 | 5668.8 | 2957.2 | 4978.0 | . 1997.6654090.14 | 5475.8 | 2904.2 | 4901.1 | . 1997.6694076.75 | 5473.9 | 2898.6 | 4901.1 | . 1997.6733993.70 | 5363.3 | 2869.3 | 4886.3 | . 1997.6773992.03 | 5409.6 | 2871.7 | 4906.9 | . 1997.6813897.43 | 5217.3 | 2828.4 | 4845.4 | . 1997.6853919.79 | 5216.7 | 2770.5 | 4817.5 | . 1997.6884001.81 | 5271.5 | 2805.8 | 4870.2 | . 1997.6924127.28 | 5447.5 | 2921.2 | 4952.2 | . 1997.6964062.13 | 5478.6 | 2918.0 | 4976.9 | . 1997.7004093.43 | 5478.1 | 2927.0 | 4991.3 | . 1997.7044073.71 | 5532.9 | 2924.5 | 4994.2 | . 1997.7084131.26 | 5505.3 | 2940.9 | 4985.2 | . 1997.7124104.57 | 5445.1 | 2919.7 | 4950.5 | . 1997.7154028.00 | 5356.7 | 2874.6 | 4905.2 | . 1997.7193890.24 | 5280.8 | 2843.6 | 4854.8 | . 1997.7233796.61 | 5281.9 | 2834.1 | 4848.2 | . 1997.7273869.53 | 5321.7 | 2898.6 | 4902.9 | . 1997.7313995.69 | 5417.8 | 2940.6 | 4976.4 | . 1997.7353970.44 | 5550.4 | 2944.0 | 5013.1 | . 1997.7384004.04 | 5629.0 | 2978.4 | 5046.2 | . 1997.7423983.06 | 5611.0 | 2977.2 | 5023.8 | . 1997.7464096.85 | 5705.1 | 3017.5 | 5075.7 | . 1997.7504091.77 | 5730.4 | 2997.2 | 5027.5 | . 1997.7544150.95 | 5732.5 | 3023.7 | 5077.2 | . 1997.7584104.93 | 5667.1 | 3005.4 | 5065.5 | . 1997.7624135.09 | 5716.6 | 2985.6 | 5226.3 | . 1997.7654116.52 | 5691.8 | 2989.0 | 5220.3 | . 1997.7694154.89 | 5673.6 | 3008.3 | 5244.2 | . 1997.7734262.98 | 5754.7 | 3054.9 | 5317.1 | . 1997.7774266.17 | 5825.0 | 3052.1 | 5296.1 | . 1997.7814266.17 | 5929.0 | 3094.0 | 5330.8 | . 1997.7854326.35 | 5897.4 | 3078.0 | 5300.0 | . 1997.7884311.13 | 5846.9 | 3064.4 | 5305.6 | . 1997.7924267.40 | 5822.3 | 3024.1 | 5262.1 | . 1997.7964179.92 | 5732.2 | 2960.7 | 5217.8 | . 1997.8004164.62 | 5699.5 | 2955.1 | 5227.3 | . 1997.8044225.27 | 5792.8 | 3002.9 | 5300.1 | . 1997.8084215.23 | 5836.3 | 3002.5 | 5298.9 | . 1997.8124168.62 | 5815.9 | 2992.2 | 5263.7 | . 1997.8154149.92 | 5806.8 | 2992.9 | 5287.9 | . 1997.8194049.16 | 5751.6 | 2958.0 | 5271.1 | . 1997.8234069.25 | 5777.2 | 2946.7 | 5211.0 | . 1997.8274172.47 | 5862.9 | 2989.9 | 5225.9 | . 1997.8314124.86 | 5803.2 | 2958.1 | 5148.8 | . 1997.8353976.38 | 5651.8 | 2856.9 | 4991.5 | . 1997.8383981.44 | 5689.5 | 2849.0 | 4970.2 | . 1997.8423871.39 | 5533.5 | 2769.6 | 4840.7 | . 1997.8463645.69 | 5279.7 | 2651.3 | 4755.4 | . 1997.8503806.66 | 5479.0 | 2818.0 | 4871.8 | . 1997.8543748.88 | 5370.9 | 2739.5 | 4801.9 | . 1997.8583753.66 | 5467.2 | 2739.3 | 4842.3 | . 1997.8623847.73 | 5581.6 | 2788.0 | 4906.4 | . 1997.8653784.80 | 5538.2 | 2774.9 | 4897.4 | . 1997.8693841.39 | 5601.6 | 2822.4 | 4908.3 | . 1997.8733813.88 | 5557.4 | 2781.8 | 4863.8 | . 1997.8773715.38 | 5438.6 | 2707.1 | 4764.3 | . 1997.8813728.37 | 5459.7 | 2707.1 | 4806.8 | . 1997.8853734.79 | 5483.9 | 2707.1 | 4793.7 | . 1997.8883697.48 | 5434.0 | 2694.5 | 4720.4 | . 1997.8923701.94 | 5418.2 | 2700.7 | 4711.0 | . 1997.8963676.65 | 5437.0 | 2698.9 | 4741.8 | . 1997.9003816.71 | 5565.0 | 2773.0 | 4867.0 | . 1997.9043844.14 | 5574.2 | 2782.6 | 4845.4 | . 1997.9083876.90 | 5571.7 | 2790.6 | 4830.1 | . 1997.9123931.81 | 5650.4 | 2821.2 | 4908.4 | . 1997.9153941.91 | 5725.5 | 2861.7 | 4985.8 | . 1997.9193832.10 | 5645.7 | 2802.5 | 4898.6 | . 1997.9233850.14 | 5666.3 | 2786.3 | 4863.5 | . 1997.9273926.93 | 5738.3 | 2811.7 | 4891.2 | . 1997.9313961.97 | 5772.4 | 2829.0 | 4889.0 | . 1997.9353972.08 | 5775.9 | 2854.4 | 4831.8 | . 1997.9384125.92 | 5875.1 | 2918.5 | 4921.8 | . 1997.9424096.40 | 5919.9 | 2913.1 | 4977.6 | . 1997.9464074.55 | 5922.7 | 2902.4 | 4970.7 | . 1997.9504159.72 | 5969.5 | 2914.5 | 5082.3 | . 1997.9544191.81 | 6009.0 | 2910.1 | 5142.9 | . 1997.9584208.14 | 6095.3 | 2932.5 | 5187.4 | . 1997.9624187.13 | 6103.2 | 2959.4 | 5177.1 | . 1997.9654116.70 | 6056.6 | 2932.2 | 5130.7 | . 1997.9694016.70 | 6021.8 | 2828.5 | 5035.9 | . 1997.9734061.91 | 6018.7 | 2830.3 | 5045.2 | . 1997.9774029.08 | 5986.6 | 2838.3 | 5121.8 | . 1997.9814150.31 | 6092.7 | 2912.2 | 5203.4 | . 1997.9854154.57 | 6122.1 | 2893.3 | 5190.8 | . 1997.9884162.92 | 6115.1 | 2894.5 | 5168.3 | . 1997.9924055.35 | 5989.9 | 2822.9 | 5020.2 | . 1997.9964125.54 | 6049.3 | 2869.7 | 5018.2 | . 1998.0004132.79 | 6044.7 | 2858.1 | 5049.8 | . hist( EuStockMarkets[, &quot;SMI&quot;], 30) hist(diff(EuStockMarkets[, &quot;SMI&quot;], 30)) . plot( EuStockMarkets[, &quot;SMI&quot;], EuStockMarkets[, &quot;DAX&quot;]) plot(diff(EuStockMarkets[, &quot;SMI&quot;]), diff(EuStockMarkets[, &quot;DAX&quot;])) . plot(lag(diff(EuStockMarkets[, &quot;SMI&quot;]), 1), diff(EuStockMarkets[, &quot;DAX&quot;])) . ## rnorm 함수로 정규분포를 따르는 난수를 100개 추출합니다 x &lt;- rnorm(n=100, mean=0, sd=10) + 1:100 ## rep 함수로 1/n 값을 n번 반복하는 배열을 만드는 함수를 만듭니다 mn &lt;- function(n) rep(1/n, n) plot(x, type = &#39;l&#39;, lwd = 1) ## 기본 R의 filter 함수로 롤링 평균을 계산합니다. 각각 5개, 50개 단위로 롤링 합니다 lines(filter(x, mn( 5)), col = 2, lwd = 3, lty = 2) lines(filter(x, mn(50)), col = 3, lwd = 3, lty = 3) . ## 기능을 좀 더 &#39;사용자 정의&#39;하여 사용할 수도 있습니다. install.packages(&quot;zoo&quot;) require(zoo) ## x를 zoo 객체로 만들어 각 데이터를 인덱싱 해 줍니다 ## rollapply 함수는 데이터, 윈도우크기, 적용함수, 롤링적용 정렬 방향, ## 윈도우크기만큼 데이터가 없어도 적용할 것인가? 등의 인자 값을 지정합니다 f1 &lt;- rollapply(zoo(x), 20, function(w) min(w), align = &quot;left&quot;, partial = TRUE) f2 &lt;- rollapply(zoo(x), 20, function(w) min(w), align = &quot;right&quot;, partial = TRUE) plot(x, lwd=1, type=&#39;l&#39;) lines(f1, col=2, lwd=3, lty=2) lines(f2, col=3, lwd=3, lty=3) . Installing package into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) Loading required package: zoo Attaching package: ‘zoo’ The following objects are masked from ‘package:base’: as.Date, as.Date.numeric . # 확장 윈도우 plot(x, type = &#39;l&#39;, lwd = 1) lines(cummax(x), col = 2, lwd = 3, lty = 2) # 최대값 lines(cumsum(x)/1:length(x), col = 3, lwd = 3, lty = 3) # 평균 . plot(x, type = &#39;l&#39;, lwd = 1) lines(rollapply(zoo(x), seq_along(x), function(w) max(w), partial = TRUE, align = &quot;right&quot;), col=2,lwd=3,lty=2) lines(rollapply(zoo(x), seq_along(x), function(w) mean(w), partial = TRUE, align = &quot;right&quot;), col=2,lwd=3,lty=3) . x&lt;-1:100 y&lt;-sin(x * pi /3) plot(y, type = &quot;b&quot;) acf(y) . install.packages(&quot;data.table&quot;) library(data.table) . Installing package into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) . ## cor 함수는 상관계수를 계산하는 용도로 사용됩니다 ## 첫 번째와 두 번째 파라미터가 비교 대상 둘에 대한 것입니다 ## use 파라미터는 누락된 값 처리 방법으로, pairwise.complete.obs는 ## 계산 대상 변수만을 대상으로 누락된 값을 제거합니다 ## y와 y로부터 시차 1과 2만큼 움직인 것과의 상관계수를 계산합니다 cor(y, shift(y, 1), use = &quot;pairwise.complete.obs&quot;) cor(y, shift(y, 2), use = &quot;pairwise.complete.obs&quot;) . 0.500153115912332 -0.503715197153103 y&lt;-sin(x * pi /3) plot(y[1:30], type = &quot;b&quot;) pacf(y) . y1&lt;-sin(x * pi /3) plot(y1, type = &quot;b&quot;) acf (y1) pacf(y1) y2&lt;-sin(x * pi /10) plot(y2, type = &quot;b&quot;) acf (y2) pacf(y2) . y &lt;- y1 + y2 plot(y, type = &quot;b&quot;) acf (y) pacf(y) . ## R noise1 &lt;- rnorm(100, sd = 0.05) noise2 &lt;- rnorm(100, sd = 0.05) y1 &lt;- y1 + noise1 y2 &lt;- y2 + noise2 y &lt;- y1 + y2 plot(y1, type = &#39;b&#39;) acf (y1) pacf(y1) plot(y2, type = &#39;b&#39;) acf (y2) pacf(y2) plot(y, type = &#39;b&#39;) acf (y) pacf(y) . ## R x &lt;- 1:100 plot(x) acf (x) pacf(x) . install.packages(&quot;timevis&quot;) require(timevis) donations &lt;- fread(&quot;donations.csv&quot;) d &lt;- donations[, .(min(timestamp), max(timestamp)), user] names(d) &lt;- c(&quot;content&quot;, &quot;start&quot;, &quot;end&quot;) d &lt;- d[start != end] timevis(d[sample(1:nrow(d), 20)]) . Installing package into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) also installing the dependencies ‘httpuv’, ‘xtable’, ‘sourcetools’, ‘fastmap’, ‘shiny’ Loading required package: timevis . Error in fread(&#34;donations.csv&#34;): File &#39;donations.csv&#39; does not exist or is non-readable. getwd()==&#39;/content&#39; Traceback: 1. fread(&#34;donations.csv&#34;) 2. stop(&#34;File &#39;&#34;, file, &#34;&#39; does not exist or is non-readable. getwd()==&#39;&#34;, . getwd(), &#34;&#39;&#34;) . t(matrix(AirPassengers, nrow = 12, ncol = 12)) . A matrix: 12 × 12 of type dbl 112 | 118 | 132 | 129 | 121 | 135 | 148 | 148 | 136 | 119 | 104 | 118 | . 115 | 126 | 141 | 135 | 125 | 149 | 170 | 170 | 158 | 133 | 114 | 140 | . 145 | 150 | 178 | 163 | 172 | 178 | 199 | 199 | 184 | 162 | 146 | 166 | . 171 | 180 | 193 | 181 | 183 | 218 | 230 | 242 | 209 | 191 | 172 | 194 | . 196 | 196 | 236 | 235 | 229 | 243 | 264 | 272 | 237 | 211 | 180 | 201 | . 204 | 188 | 235 | 227 | 234 | 264 | 302 | 293 | 259 | 229 | 203 | 229 | . 242 | 233 | 267 | 269 | 270 | 315 | 364 | 347 | 312 | 274 | 237 | 278 | . 284 | 277 | 317 | 313 | 318 | 374 | 413 | 405 | 355 | 306 | 271 | 306 | . 315 | 301 | 356 | 348 | 355 | 422 | 465 | 467 | 404 | 347 | 305 | 336 | . 340 | 318 | 362 | 348 | 363 | 435 | 491 | 505 | 404 | 359 | 310 | 337 | . 360 | 342 | 406 | 396 | 420 | 472 | 548 | 559 | 463 | 407 | 362 | 405 | . 417 | 391 | 419 | 461 | 472 | 535 | 622 | 606 | 508 | 461 | 390 | 432 | . ## R colors&lt;-c(&quot;green&quot;,&quot;red&quot;, &quot;pink&quot;, &quot;blue&quot;, &quot;yellow&quot;,&quot;lightsalmon&quot;, &quot;black&quot;, &quot;gray&quot;, &quot;cyan&quot;, &quot;lightblue&quot;, &quot;maroon&quot;, &quot;purple&quot;) matplot(matrix(AirPassengers, nrow = 12, ncol = 12), type = &#39;l&#39;, col = colors, lty = 1, lwd = 2.5, xaxt = &quot;n&quot;, ylab = &quot;Passenger Count&quot;) legend(&quot;topleft&quot;, legend = 1949:1960, lty = 1, lwd = 2.5, col = colors) axis(1, at = 1:12, labels = c(&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;)) . install.packages(&quot;forecast&quot;) require(forecast) seasonplot(AirPassengers) . Installing package into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) also installing the dependencies ‘xts’, ‘TTR’, ‘quadprog’, ‘quantmod’, ‘fracdiff’, ‘lmtest’, ‘timeDate’, ‘tseries’, ‘urca’, ‘RcppArmadillo’ Loading required package: forecast Registered S3 method overwritten by &#39;quantmod&#39;: method from as.zoo.data.frame zoo . ## R months &lt;- c(&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;) matplot(t(matrix(AirPassengers, nrow = 12, ncol = 12)), type=&#39;l&#39;,col=colors,lty=1,lwd=2.5) legend(&quot;left&quot;, legend = months, col=colors,lty=1,lwd=2.5) . monthplot(AirPassengers) . hist2d &lt;- function(data, nbins.y, xlabels) { ## we make ybins evenly spaced to include ## minimum and maximum points ymin=min(data) ymax=max(data) * 1.0001 ## the lazy way out to avoid worrying about inclusion/exclusion ybins=seq(from=ymin,to=ymax,length.out=nbins.y+1) ## make a zero matrix of the appropriate size hist.matrix=matrix(0,nrow=nbins.y,ncol=ncol(data)) ## data comes in matrix form where each row ## represents one data point for(i in 1:nrow(data)) { ts = findInterval(data[i, ], ybins) for (j in 1:ncol(data)) { hist.matrix[ts[j], j] = hist.matrix[ts[j], j] + 1 hist.matrix } } hist.matrix } . h &lt;- hist2d(t(matrix(AirPassengers, nrow = 12, ncol = 12)), 5, months) . Error in hist.matrix[ts[j], j] &lt;- hist.matrix[ts[j], j] + 1 &gt; hist.matrix: number of items to replace is not a multiple of replacement length Traceback: 1. hist2d(t(matrix(AirPassengers, nrow = 12, ncol = 12)), 5, months) . image(1:ncol(h), 1:nrow(h), t(h), col = heat.colors(5), axes = FALSE, xlab = &quot;Time&quot;, ylab = &quot;Passenger Count&quot;) . Error in ncol(h): object &#39;h&#39; not found Traceback: 1. image(1:ncol(h), 1:nrow(h), t(h), col = heat.colors(5), axes = FALSE, . xlab = &#34;Time&#34;, ylab = &#34;Passenger Count&#34;) 2. ncol(h) . require(data.table) words &lt;- fread(url.str) w1 &lt;- words[V1 == 1] h = hist2d(w1, 25, 1:ncol(w1)) colors &lt;- gray.colors(20, start = 1, end = .5) par(mfrow = c(1, 2)) image(1:ncol(h), 1:nrow(h), t(h), col = colors, axes = FALSE, xlab = &quot;Time&quot;, ylab = &quot;Projection Value&quot;) image(1:ncol(h), 1:nrow(h), t(log(h)), col = colors, axes = FALSE, xlab = &quot;Time&quot;, ylab = &quot;Projection Value&quot;) . Error in fread(url.str): object &#39;url.str&#39; not found Traceback: 1. fread(url.str) . ## R w1 &lt;- words[V1 == 1] ## melt the data to the pairs of paired-coordinates ## expected by most 2d histogram implementations names(w1) &lt;- c(&quot;type&quot;, 1:270) w1 &lt;- melt(w1, id.vars = &quot;type&quot;) w1 &lt;- w1[, -1] names(w1) &lt;- c(&quot;Time point&quot;, &quot;Value&quot;) plot(hexbin(w1)) . devtools::install_github(&#39;IRkernel/repr&#39;) . Downloading GitHub repo IRkernel/repr@HEAD . glue (1.4.1 -&gt; 1.4.2) [CRAN] vctrs (0.3.2 -&gt; 0.3.4) [CRAN] . Installing 2 packages: glue, vctrs Installing packages into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) . ✔ checking for file ‘/tmp/RtmpnGpW8u/remotes654a01c9f6/IRkernel-repr-7baa0ae/DESCRIPTION’ ─ preparing ‘repr’: ✔ checking DESCRIPTION meta-information ─ checking for LF line-endings in source and make files and shell scripts ─ checking for empty or unneeded directories ─ building ‘repr_1.1.1.9000.tar.gz’ . Installing package into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) . install.packages(c(&#39;repr&#39;, &#39;IRdisplay&#39;, &#39;pbdZMQ&#39;, &#39;devtools&#39;)) . Installing packages into ‘/usr/local/lib/R/site-library’ (as ‘lib’ is unspecified) . # install.packages(&quot;plotly&quot;) require(plotly) require(data.table) months = 1:12 ap = data.table(matrix(AirPassengers, nrow = 12, ncol = 12)) names(ap) = as.character(1949:1960) ap[, month := months] ap = melt(ap, id.vars = &#39;month&#39;) names(ap) = c(&quot;month&quot;, &quot;year&quot;, &quot;count&quot;) p &lt;- plot_ly(ap, x = ~month, y = ~year, z = ~count, color = ~as.factor(month)) %&gt;% add_markers()%&gt;% layout(scene=list(xaxis = list(title = &#39;Month&#39;), yaxis = list(title = &#39;Year&#39;), zaxis = list(title = &#39;PassengerCount&#39;))) . embed_notebook(p) . Warning message in RColorBrewer::brewer.pal(N, &#34;Set2&#34;): “n too large, allowed maximum for palette Set2 is 8 Returning the palette you asked for with that many colors ” . Error in farver::decode_colour(colors, alpha = TRUE, to = &#34;lab&#34;, na_value = &#34;transparent&#34;): unused argument (na_value = &#34;transparent&#34;) Traceback: 1. embed_notebook(p) 2. embed_notebook.plotly(p) 3. plotly_build(x) 4. plotly_build.plotly(x) 5. map_color(traces, title = paste(colorTitle, collapse = br()), . colorway = colorway(p)) 6. Map(function(x, y) toRGB(colScale(as.character(x)), y), color[isDiscrete], . alphas[isDiscrete]) 7. mapply(FUN = f, ..., SIMPLIFY = FALSE) 8. (function (x, y) . toRGB(colScale(as.character(x)), y))(dots[[1L]][[1L]], dots[[2L]][[1L]]) 9. toRGB(colScale(as.character(x)), y) 10. colScale(as.character(x)) 11. safePaletteFunc(palette, na.color, alpha, nlevels = length(lvls) * . ifelse(reverse, -1, 1)) 12. filterRange(filterNA(na.color = na.color, filterZeroLength(filterRGB(toPaletteFunc(pal, . alpha = alpha, nlevels = nlevels))))) 13. force(f) 14. filterNA(na.color = na.color, filterZeroLength(filterRGB(toPaletteFunc(pal, . alpha = alpha, nlevels = nlevels)))) 15. force(f) 16. filterZeroLength(filterRGB(toPaletteFunc(pal, alpha = alpha, . nlevels = nlevels))) 17. force(f) 18. filterRGB(toPaletteFunc(pal, alpha = alpha, nlevels = nlevels)) 19. force(f) 20. toPaletteFunc(pal, alpha = alpha, nlevels = nlevels) 21. toPaletteFunc.character(pal, alpha = alpha, nlevels = nlevels) 22. colour_ramp(colors, alpha = alpha) . file.location &lt;- &#39;https://raw.githubusercontent.com/plotly/datasets/master/_3d-line-plot.csv&#39; data &lt;- read.csv(file.location) p &lt;- plot_ly(data,x=~x1,y=~y1,z=~z1, type = &#39;scatter3d&#39;, mode = &#39;lines&#39;, line = list(color = &#39;#1f77b4&#39;, width = 1)) . embed_notebook(p) .",
            "url": "https://deep-diver.github.io/practical-time-series-analysis-korean/chapter3/",
            "relUrl": "/chapter3/",
            "date": " • Sep 7, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://deep-diver.github.io/practical-time-series-analysis-korean/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://deep-diver.github.io/practical-time-series-analysis-korean/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}